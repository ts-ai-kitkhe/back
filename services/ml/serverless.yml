service: ml

custom:
  # S3
  S3_ASSETS_BUCKET_NAME: assets.ts-ai-kitkhe.ge
  S3_ML_BUCKET_NAME: ml.ts-ai-kitkhe.ge
  # Lambda
  CORE_PAGES_GET_ALL_LAMBDA_ARN: ${cf:core-${self:provider.stage}.PagesGetAllLambdaArn}
  # Dynamo Db
  DYNAMO_DB_BOOKS_TABLE_NAME: books
  # Plugins
  bundle:
    sourcemaps: false # Enable source maps
    linting: false # Disable linting
    caching: false # Enable Webpack caching
    concurrency: 2 # Set desired concurrency, defaults to the number of available cores
    packager: yarn # Specify a packager, 'npm' or 'yarn'. Defaults to 'npm'.

provider:
  name: aws
  region: eu-central-1
  runtime: python3.8
  versionFunctions: false
  httpApi:
    cors: true
    authorizers:
      adminJWTAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_A5u5syC5t
        audience:
          - 4htkustm5ob7lqd45n0ovff66e
  ecr:
    scanOnPush: false
    images:
      s3ImageProcessor:
        path: ./functions/process-image
      generateText:
        path: ./functions/generate-text
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:*"
          Resource:
            - "arn:aws:s3:::${self:custom.S3_ASSETS_BUCKET_NAME}"
            - "arn:aws:s3:::${self:custom.S3_ASSETS_BUCKET_NAME}/*"
            - "arn:aws:s3:::${self:custom.S3_ML_BUCKET_NAME}"
            - "arn:aws:s3:::${self:custom.S3_ML_BUCKET_NAME}/*"
        - Effect: Allow
          Action: lambda:*
          Resource: "*"
        - Effect: Allow
          Action: "dynamodb:*"
          Resource: "*"

functions:
  processImage:
    image: s3ImageProcessor
    timeout: 900
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
    events:
      - eventBridge:
          pattern:
            source:
              - aws.s3
            detail-type:
              - Object Created
            detail:
              bucket:
                name:
                  - ${self:custom.S3_ASSETS_BUCKET_NAME}
              object:
                key:
                  - prefix: "books/"

  generateText:
    image: generateText
    timeout: 90
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
    events:
      - eventBridge:
          pattern:
            source:
              - aws.s3
            detail-type:
              - Object Created
            detail:
              bucket:
                name:
                  - ${self:custom.S3_ML_BUCKET_NAME}
              object:
                key:
                  - prefix: "books/"

  concatenateText:
    handler: functions.concatenate-text.handler.main
    timeout: 90
    package:
      include:
        - functions/concatenate-text/*
        - functions/__init__.py
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
      CORE_PAGES_GET_ALL_LAMBDA_ARN: ${self:custom.CORE_PAGES_GET_ALL_LAMBDA_ARN}
    events:
      - eventBridge:
          pattern:
            source:
              - aws.s3
            detail-type:
              - Object Created
            detail:
              bucket:
                name:
                  - ${self:custom.S3_ML_BUCKET_NAME}
              object:
                key:
                  - prefix: "books/"
      - eventBridge:
          pattern:
            source:
              - aws.s3
            detail-type:
              - Object Deleted
            detail:
              bucket:
                name:
                  - ${self:custom.S3_ML_BUCKET_NAME}
              object:
                key:
                  - prefix: "books/"

  textDelete:
    handler: functions.text-delete.handler.main
    package:
      include:
        - functions/text-delete/*
        - functions/__init__.py
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
    events:
      - eventBridge:
          pattern:
            source:
              - aws.s3
            detail-type:
              - Object Deleted
            detail:
              bucket:
                name:
                  - ${self:custom.S3_ML_BUCKET_NAME}
              object:
                key:
                  - prefix: "books/"

  predictionDelete:
    handler: functions.prediction-delete.handler.main
    package:
      include:
        - functions/prediction-delete/*
        - functions/__init__.py
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
      S3_ASSETS_BUCKET_NAME: ${self:custom.S3_ASSETS_BUCKET_NAME}
    events:
      - eventBridge:
          pattern:
            source:
              - aws.s3
            detail-type:
              - Object Deleted
            detail:
              bucket:
                name:
                  - ${self:custom.S3_ASSETS_BUCKET_NAME}
              object:
                key:
                  - prefix: "books/"

  predictionsUpdate:
    handler: functions/predictions-update/handler.main
    runtime: nodejs16.x
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
    events:
      - httpApi:
          method: PATCH
          path: /books/{id}/pages/{filename}/predictions
          authorizer:
            name: adminJWTAuthorizer

  booksGet:
    handler: functions/books-get/handler.main
    runtime: nodejs16.x
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
    events:
      - httpApi:
          method: GET
          path: /books/{id}

  booksGetAll:
    handler: functions/books-get-all/handler.main
    runtime: nodejs16.x
    environment:
      S3_ML_BUCKET_NAME: ${self:custom.S3_ML_BUCKET_NAME}
      DYNAMO_DB_BOOKS_TABLE_NAME: ${self:custom.DYNAMO_DB_BOOKS_TABLE_NAME}
    events:
      - httpApi:
          method: GET
          path: /books

package:
  individually: true
  exclude:
    - "*/**"

plugins:
  - serverless-bundle
